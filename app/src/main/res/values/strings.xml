<resources>
    <string name="app_name">Puzzle Center</string>
    <string name="n_x_n_x_n_cubes">n x n x n cubes</string>
    <string name="_2x2x2">2x2x2</string>
    <string name="_3x3x3">3x3x3</string>
    <string name="_4x4x4">4x4x4</string>
    <string name="_5x5x5">5x5x5</string>
    <string name="_6x6x6">6x6x6</string>
    <string name="_6x6x6soon">6x6x6 (soon)</string>
    <string name="_7x7x7">7x7x7</string>
    <string name="todo">TODO</string>
    <string name="wca_puzzles">WCA Puzzles</string>
    <string name="skewb">Skewb</string>
    <string name="square_1">Square-1 (soon)</string>
    <string name="pyraminx">Pyraminx</string>
    <string name="megaminx">Megaminx (soon)</string>
    <string name="magic_clock">Magic Clock (soon)</string>
    <string name="non_wca_puzzles">Non WCA Puzzles</string>
    <string name="void_cube">Void Cube (soon)</string>
    <string name="super_ivy_cube">Super Ivy Cube (soon)</string>
    <string name="pentacle_cube">Pentacle Cube (soon)</string>
    <string name="_2x2_pyraminx">2x2 Pyraminx (soon)</string>
    <string name="_2x2x4">2x2x4 (soon)</string>
    <string name="master_pyraminx">Master Pyraminx (soon)</string>
    <string name="friedrich_method">Friedrich method</string>
    <string name="second">2.</string>
    <string name="antisune"><b>AntiSune</b>\n\nR U2 R\' U\' R U\' R\'</string>
    <string name="sune"><b>Sune</b>\n\nL\' U2 L U L\' U L</string>
    <string name="not_tutorial_note">Note: This is by no means a complete tutorial. It\'s rather a collection of useful algorithms I personally use and tips. Hold the cube (yellow side up) the same way as on the top-down views, except if told otherwise.</string>
    <string name="dead_man_2x2"><b>Dead Man</b>\n\nF (R U R\’ U\’)  (R U R\’ U\’) F\’</string>
    <string name="first">1.</string>
    <string name="third">3.</string>
    <string name="_2x2_step_1"><b>First side</b>\n\nSolve any side intuitively in a way that the pieces are well permuted (the sides match too, not only the solved face).</string>
    <string name="_2x2_step_2"><b>Opposite side</b>\n\nSolve the face opposite to the one you just solved. There are 7 cases, use the appropriate algorithm:</string>
    <string name="_2x2_step_3"><b>PLL</b>\n\nLastly we have to permutate last layer. There can be 2 cases, but we can use the same algorithm:</string>
    <string name="_2x2_pll_2">There are two pieces in diagonal that are in place. Hold yellow face towards you, then execute once. This will lead to the previous case, which needs this algorithm executed once more.\n\nR U R D2 R\' U R D2 R2</string>
    <string name="_2x2_pll_1">There are two adjacent pieces in their places, and two pieces need to be swapped. Hold yellow face towards you, then execute once:\n\nR U R D2 R\' U R D2 R2</string>
    <string name="cfop">CFOP (Cross, F2L, OLL, PLL)</string>
    <string name="_3x3_step_1"><b>Cross</b>\n\nSolve any of the crosses (most people do the white cross, but being color-neutral can be faster), that is any of the center pieces matching with the edge pieces in a way that the edge pieces also match with the centers of each side accordingly.\n\nUsually the cross should face the bottom so we avoid unnecessary rotations before the second step.</string>
    <string name="_3x3_step_2"><b>F2L (First Two Layers)</b>\n\nUsing the opposite layer than your cross, form corner-edge pairs and insert them to their places one by one, completing the first two layers at the same time!</string>
    <string name="_3x3_step_3"><b>Last Cross</b>\n\nOnce the first two layers are done we have to solve the last face\'s cross.\n\nThere are 3 possibilites:</string>
    <string name="alg_2x2_h"><b>H-permutation</b>\n\n R2 U2 R U2 R2\n\nThis is a fingertrick, hold bottom left front-back with left hand, bottom right front-back with right hand, twist R2 U2 with right hand, flick R with left hand from back, and reverse back.</string>
    <string name="alg_2x2_l"><b>L-perm / Bowtie</b>\n\n F\’ (R U R\’ U\’) L\’ U L</string>
    <string name="alg_2x2_t"><b>T-permutation</b>\n\n R U R\’ U\’ R\’ F  R\’ F\’</string>
    <string name="alg_2x2_u"><b>U-permutation</b>\n\n F (R U R\’ U\’)  (R U R\’ U\’)</string>
    <string name="alg_3x3_superman"><b>Superman / Headlights</b>\n\nR2 D (R\' U2 R) D\' (R\' U2 R\')</string>
    <string name="alg_3x3_T"><b>T-permutation</b>\n\nL\' U\' L U R U\' L\' U M\'</string>
    <string name="alg_3x3_deadman"><b>Dead man</b>\n\nR U2 (R2 U\' R2 U\') (R2 U2 R)</string>
    <string name="alg_3x3_bowtie"><b>L-perm / Bowtie</b>\n\nF\' (r U R\' U\') (r\' F R)</string>
    <string name="alg_3x3_h"><b>H-perm</b>\n\nF (R U R\' U\') (R U R\' U\') (R U R\' U\') F\'</string>
    <string name="fourth">4.</string>
    <string name="_3x3_step_4"><b>OLL</b>\n\nNext step is to orient the last layer. Just like on the 2x2 there are 7 cases, most of which uses the same algorithm as the 2x2:</string>
    <string name="alg_3x3_dot"><b>Dot</b>\n\nM U (R U R\' U\') M2\' (U R U\' r\') </string>
    <string name="alg_3x3_l"><b>L-shape</b>\n\nF (R U R\' U\') (R U R\' U\') F\'</string>
    <string name="alg_3x3_line"><b>Line</b>\n\nF (R U R\' U\') F\'</string>
    <string name="fifth">5.</string>
    <string name="sixth">6.</string>
    <string name="_3x3_step_6"><b>Permutate last layer edges</b>\n\nThere are 3 possible cases here:</string>
    <string name="alg_3x3_pll4"><b>U-perms</b>\n\nFace the correct edge! Start by doing an M2 and then there are 2 cases. The center that faces you matches the edge piece on the ___ side:\n\n<b>LEFT</b>: U\' M\' U2 M U\' M2\n\n<b>RIGHT</b>: U M\' U2 M U M2</string>
    <string name="alg_3x3_pll3"><b>Z-perm / Diagonal swap</b>\n\nHold the cube so that the F edge needs to be swapped with the L one (and the R with B)!\n\n(M2 U\' M2 U\') M\' (U2 M2 U2) M\'</string>
    <string name="alg_3x3_pll5"><b>H-perm</b>\n\nSwapping F-B and L-R.\n\n(M2 U M2) U2 (M2 U M2)</string>
    <string name="_3x3_step_5"><b>PLL</b>\n\nWe have to permutate the last layer corners. There can be 2 cases, but we can use the same algorithm:</string>
    <string name="reduction_method">Reduction method</string>
    <string name="_4x4_step_0"><b>About the 4x4</b>\n\nEvery cube that has an even number of pieces (squares on a side) is a bit more difficult to solve because of two things:\n\n - <b>Parity</b>\n - <b>No centers</b>\n\nParity means that some pieces are flipped in a way that cannot occur on odd-piece puzzles such as the 3x3. These will need additional algorithms to be fixed.\n\nNo centers mean that there isn\'t a fixed center piece as on the 3x3 for example, so we have no guidance as of which piece goes where. We have to know the colour\'s relative positions to each other (although this can be seen on the corner pieces) to be able to reconstruct the same order of the colour as in solved state.\n\nFollowing the original Rubik\'s cube colours, if you hold the cube with the white face UP, green face TOWARDS you then the orange side will be to the LEFT, and:\n\n - <b>RED opposite ORANGE</b>\n\n - <b>BLUE opposite GREEN</b>\n\n - <b>YELLOW opposite WHITE</b>\n\n If you remember one of the corner pieces then by knowing the opposite colour of each 3 colours of that specific corner piece you can reconstruct the cube.</string>
    <string name="_4x4_step_1"><b>Centers</b>\n\n Firstly we have to create all the 2x2 center pieces.\n\n This step is the same on all big cubes (4x4, 5x5, etc.). We have to create pairs (lines) from the center pieces. Once we have a line, we create another line and join them together to form our centers.\n\nA tactic called "piece hiding" is used to achieve this step, because in order to not ruin the other centers we\'ve already made we need to restore pieces. To do piece hiding, place the two lines on the same layer of the cube, bring one of the lines to the other\'s position, rotate that side 180 degrees so that you can bring the other line back, now next to it\'s pair.\n\nThis step is done intuitively.</string>
    <string name="_4x4_step_2"><b>Edges</b>\n\nSecondly we have to pair up all the edge pieces using the \"slice method\". In short: use the two middle layers to slice the edge pieces next to each other, then put them to the sides to save them. When both sides are full with saved edges, put one edge to the side so that you can replace the new pairs with the wrong one. Repeat until there are only 2 edges left!\n\nThen both the edge pieces have to face each other with the same colours facing towards you each layer. Uw stands for Up-wide, so turn both of the upper layers clockwise. Hold the cube with the last 2 edges facing you!</string>
    <string name="_4x4_step_3"><b>Solve like a 3x3!</b>\n\nAt this point the cube can be solved exactly as a 3x3 cube until the OLL step, where parity may occur.</string>
    <string name="_4x4_step_4"><b>OLL/PLL parities</b>\n\n There are only two OLL parities (which require the same algorithm), and one PLL parity on the 4x4. Rw means R-Wide, so turning both right-hand layers by 90 degrees clockwise. 2R2 means the right-handed inner layer of the cube, 180 degrees.</string>
    <string name="zeroth">0.</string>
    <string name="alg_4x4_l2e"><b>Last 2 Edges (L2E)</b>\n\nUw\' R U R\' F R\' F\' R Uw</string>
    <string name="alg_4x4_ollparity"><b>OLL parity</b>\n\nRw U2 (x) Rw U2 Rw U2 Rw\’ U2 Lw U2 Rw\’ U2 Rw U2 Rw\’ U2 Rw\’</string>
    <string name="alg_4x4_pllparity"><b>PLL parity</b>\n\n2R2 U2 2R2 Uw2 2R2 Uw2</string>
    <string name="on">on</string>
    <string name="off">off</string>
    <string name="puzzle_center">Puzzle Center</string>
    <string name="author">by Okrim</string>
    <string name="utilities">Utilities</string>
    <string name="solve_timer">Solve timer</string>
    <string name="records">Records</string>
    <string name="puzzle_algorithms_by_category">Puzzle Algorithms By Category</string>
    <string name="only_algorithms_no_tutorial">No tutorial mode</string>
    <string name="other_wca_puzzles">other WCA puzzles</string>
    <string name="_5x5_step_1"><b>Centers</b>\n\n Firstly we have to create all the 3x3 center pieces.\n\n This step is the same on all big cubes (4x4, 5x5, etc.). We have to create pairs (lines) from the center pieces. Once we have a line, we create another line and join them together to form our centers.\n\nA tactic called "piece hiding" or "commutating" is used to achieve this step, because in order to not ruin the other centers we\'ve already made we need to restore pieces. To do piece hiding, place the two lines on the same layer of the cube, bring one of the lines to the other\'s position, rotate that side 180 degrees so that you can bring the other line back, now next to it\'s pair.\n\nThis step is done intuitively.</string>
    <string name="_5x5_step_2"><b>Edges</b>\n\nSecondly we have to pair up all the edge pieces using the \"slice method\". In short: use the three middle layers to slice the edge pieces next to each other, then put them to the sides to save them. When both sides are full with saved edges, put one edge to the side so that you can replace the new pairs with the wrong one. Repeat until there are only 2 edges left! \n\nHold the cube with the 2 last edges facing you! Uw stands for Up-wide, so turn both of the upper layers clockwise. 3Uw stands for turning all 3 top layers together by 90 degrees clockwise.\n\nYou have to slice from left to right in a way that on the right there are 2 edges that match up forming a pair. If this is not possible try re-orienting the two sides (rotating them) until the step is possible!\n\nThere are 2 cases:</string>
    <string name="_5x5_step_3"><b>Parity</b>\n\nSometimes parity can occur, in that case there is only one edge left to solve and it will have the center piece rotated. We can use the 4x4 OLL parity algorithm to solve it.</string>
    <string name="_5x5_step_4"><b>Solve like a 3x3!</b>\n\nAt this point the cube can be solved exactly as a 3x3 cube. There are no OLL or PLL parities on the 5x5!</string>
    <string name="alg_5x5_l2e_2"><b>Last 2 Edges (L2E)</b>\n\n3Uw\' R U R\' F R\' F\' R 3Uw</string>
    <string name="alg_5x5_parity">Rw U2 (x) Rw U2 Rw U2 3Rw\’ U2 Lw U2 Rw\’ U2 Rw U2 Rw\’ U2 Rw\’</string>
    <string name="_6x6_step_0"><b>About the 6x6</b>\n\nEvery cube that has an even number of pieces (squares on a side) is a bit more difficult to solve because of two things:\n\n - <b>Parity</b>\n - <b>No centers</b>\n\nParity means that some pieces are flipped in a way that cannot occur on odd-piece puzzles such as the 3x3. These will need additional algorithms to be fixed.\n\nNo centers mean that there isn\'t a fixed center piece as on the 3x3 for example, so we have no guidance as of which piece goes where. We have to know the colour\'s relative positions to each other (although this can be seen on the corner pieces) to be able to reconstruct the same order of the colour as in solved state.\n\nFollowing the original Rubik\'s cube colours, if you hold the cube with the white face UP, green face TOWARDS you then the orange side will be to the LEFT, and:\n\n - <b>RED opposite ORANGE</b>\n\n - <b>BLUE opposite GREEN</b>\n\n - <b>YELLOW opposite WHITE</b>\n\n If you remember one of the corner pieces then by knowing the opposite colour of each 3 colours of that specific corner piece you can reconstruct the cube.</string>
    <string name="_6x6_step_1"><b>Centers</b>\n\n Firstly we have to create all the 4x4 center pieces.\n\n This step is the same on all big cubes (4x4, 5x5, etc.). We have to create pairs (lines) from the center pieces. Once we have a line, we create another line and join them together to form our centers.\n\nA tactic called "piece hiding" or "commutating" is used to achieve this step, because in order to not ruin the other centers we\'ve already made we need to restore pieces. To do piece hiding, place the two lines on the same layer of the cube, bring one of the lines to the other\'s position, rotate that side 180 degrees so that you can bring the other line back, now next to it\'s pair.\n\nThis step is done intuitively.</string>
    <string name="_6x6_step_2"><b>Edges</b>\n\nSecondly we have to pair up all the edge pieces using the \"slice method\". In short: use the four middle layers to slice the edge pieces next to each other, then put them to the sides to save them. When both sides are full with saved edges, put one edge to the side so that you can replace the new pairs with the wrong one. \n\nUw stands for Up-wide, so turn both of the upper layers clockwise.  Hold the cube with the last 2 edges facing you! You have to slice from left to right in a way that on the right there are 2 edges that match up forming a pair. If this is not possible try re-orienting the two sides (rotating them) until the step is possible! Repeat until there are only 2 edges left!\n\nThere are 2 cases:</string>
    <string name="_7x7_step_1"><b>Centers</b>\n\n Firstly we have to create all the 5x5 center pieces.\n\n This step is the same on all big cubes (4x4, 5x5, etc.). We have to create pairs (lines) from the center pieces. Once we have a line, we create another line and join them together to form our centers.\n\nA tactic called "piece hiding" or "commutating" is used to achieve this step, because in order to not ruin the other centers we\'ve already made we need to restore pieces. To do piece hiding, place the two lines on the same layer of the cube, bring one of the lines to the other\'s position, rotate that side 180 degrees so that you can bring the other line back, now next to it\'s pair.\n\nThis step is done intuitively.</string>
    <string name="_7x7_step_2"><b>Edges</b>\n\nSecondly we have to pair up all the edge pieces using the \"slice method\". In short: use the five middle layers to slice the edge pieces next to each other, then put them to the sides to save them. When both sides are full with saved edges, put one edge to the side so that you can replace the new pairs with the wrong one. Repeat until there are only 2 edges left! \n\nHold the cube with the 2 last edges facing you! Uw stands for Up-wide, so turn both of the upper layers clockwise. 3Uw stands for turning all 3 top layers together by 90 degrees clockwise.\n\nYou have to slice from left to right.</string>
    <string name="_7x7_step_3"><b>Parity</b>\n\nSometimes parity can occur, in that case there is only one edge left to solve, and it will have pieces flipped in place. We can use the 4x4 OLL parity algorithm to solve two of them. The two parities where there is one piece (may it be a single edge or 3 of them next to eachother that can be considered one piece) can be avoided with good lookahead.</string>
    <string name="_7x7_step_4"><b>Solve like a 3x3!</b>\n\nAt this point the cube can be solved exactly as a 3x3 cube. There are no OLL or PLL parities on the 7x7!</string>
    <string name="alg_7x7_edgeswap"><b>Last 2 Edges (L2E)</b>\n\n2Uw\' R U R\' F R\' F\' R 2Uw\n\n<b>OR</b>\n\n3Uw\' R U R\' F R\' F\' R 3Uw\n\n<b>OR</b>\n\n4Uw\' R U R\' F R\' F\' R 4Uw\n\n<b>OR</b>\n\n3Dw\' R U R\' F R\' F\' R 3Dw\n\n<b>OR</b>\n\n2Dw\' R U R\' F R\' F\' R 2Dw\n\ndepending on which layers you slice.</string>
    <string name="alg_7x7_parity_1">\n3Rw U2 (x) 3Rw U2 3Rw U2 4Rw\’ U2 3Lw U2 3Rw\’ U2 3Rw U2 3Rw\’ U2 3Rw\’\n\n<b>OR</b>\n\n3Rw2 B2 U2 3Lw U2 3Rw\' U2 3Rw U2 F2 3Rw F2 3Lw\' B2 3Rw2</string>
    <string name="alg_7x7_parity_2">\n2Rw U2 (x) 2Rw U2 2Rw U2 5Rw\’ U2 2Lw U2 2Rw\’ U2 2Rw U2 2Rw\’ U2 2Rw\’\n\n<b>OR</b>\n\nRw2 B2 U2 Lw U2 Rw\' U2 Rw U2 F2 Rw F2 Lw\' B2 Rw2</string>
    <string name="alg_7x7_parity_3">\nSince this case has the edges flipped twice we have to execute the parity algorithm twice, first flipping the middle edge, then the three middle edges together (considering them as one piece).\n\n<b>First</b>\n\n3Rw U2 (x) 3Rw U2 3Rw U2 4Rw\’ U2 3Lw U2 3Rw\’ U2 3Rw U2 3Rw\’ U2 3Rw\’\n\n<b>Second</b>\n\n2Rw U2 (x) 2Rw U2 2Rw U2 5Rw\’ U2 2Lw U2 2Rw\’ U2 2Rw U2 2Rw\’ U2 2Rw\’</string>
    <string name="_5x5_edgeswap_explication"><b>Edgeswap alg demo</b>\n\nThe edgeswap algorithm basically swaps the top-right edge with the bottom-right edge whilst flipping them, the second-top-right with the second-bottom-right etc. The middle edge flips in place. If you execute the method with the situation given on the photo you will have all edges complete.</string>
    <string name="_1st">1st</string>
    <string name="_2nd">2nd</string>
    <string name="_3rd">3rd</string>
    <string name="category">Category:</string>
    <string name="beginner_method">Beginner method</string>
    <string name="skewb_step_0"><b>Skewb thoughts</b>\n\nWhen first solving the Skewb it the axis of rotation seems weird and you may need some time to get used to the turning. Normally when turning the Skewb, you can think of each turn as twisting one of the corners, since the corners are on the axis of rotation.\n\nThe sledgehammer <b>(R\' L R L\')</b> is the only algorithm we have to use on the skewb. Neat, right? R means the top right corner facing you, L means top left corner facing you. It\'s worth to learn a fingertrick to perform it as it can make it a lot faster.</string>
    <string name="skewb_step_1"><b>White face</b>\n\nSolve one face intuitively in a way that <b>the sides of the corners match up</b> as well. Most commonly we start by the white face but being colour neutral can increase one\'s solving speed.</string>
    <string name="skewb_step_2"><b>Yellow corners</b>\n\nSecond step is to orientate all the yellow corners. There are two possibilities:</string>
    <string name="skewb_step_3"><b>Yellow center</b>\n\nOnce all the yellow corners are oriented correctly, we have to turn the cube in a way that the yellow center is on the B (back) side and perform the following algorithm:</string>
    <string name="skewb_step_4"><b>Sides</b>\n\nWe have to perform 3-cycles to move the center pieces around. The cycle goes like this: B -> U, U -> F, F -> B. Use the 3-cycle algorithm from the last step!</string>
    <string name="alg_skewb_diagonal"><b>Diagonal</b>\n\nR\' L R L\'\n\nThis will leave us with a dead man</string>
    <string name="alg_skewb_deadman"><b>Deadman</b>\n\nR\' L R L\'</string>
    <string name="alg_skewb_3_cycle"><b>3-cycle centers</b>\n\n(R\' L R L\') (y2) (R\' L R L\')</string>
    <string name="pyraminx_step_0"><b>Pyraminx thoughts</b>\n\nNormally when turning the Pyraminx, you can think of each turn as twisting one of the corners, since the corners are on the axis of rotation.\n\nThe sledgehammer <b>(R\' L R L\')</b> and its mirror move <b>(L R\' L\' R)</b> are the only algorithms we have to use on the pyraminx. Neat, right? R means the two bottom right layers facing you, L means the two bottom left layers facing you. It\'s worth to learn a fingertrick to perform it as it can make it a lot faster.</string>
    <string name="pyraminx_step_1"><b>Solving the corners</b>\n\nThis is very straightforward, just orientate all the corner pieces by twisting them individually! Since they cannot change places this is super easy.</string>
    <string name="pyraminx_step_2"><b>Solving two of the edges</b>\n\nHold the puzzle with one of the corners pointing downwards, and intuitively place two edge pieces in their places next to each other! The third edge must not be solved, we will be referencing to the third edge as the "hole".</string>
    <string name="pyraminx_step_3"><b>Solving the top facing side</b>\n\nYou still have to hold the puzzle with the - now solved - corner pointing downwards, so there is a flat face on the upper side.\n\nWe now have to solve the 3 inner pieces (centers) of the top face, by using the one wrong edge we didn\'t solve in the last step to rotate the upper-sided centers.\n\nCheck what 3 colours are present on the lower side corner, and the fourth colour will be the one on the top face. Rotate each center of the top face above the wrong edge (hole) and orient them correctly.</string>
    <string name="pyraminx_step_4"><b>Solving the third edge (hole)</b>\n\nNow we no longer need the third edge to be out of place so we can solve it. Bring the appropriate edge piece next to it\'s place (the hole) in the correct orientation. We cannot just simply insert it into place since that would ruin the top side we just made. So first, we have to bring the last edge piece down to the bottom (save it), bring it\s place with the wrong edge up to the upper layer, and bring the saved correct edge piece up too to replace the wrong edge with the good one, finally restore the edge.</string>
    <string name="pyraminx_step_5"><b>Last 3 edges</b>\n\nThere are 4 different cases for this step, one of them being the skip, where the puzzle is already solved. Hold the puzzle as shown on the pictures!</string>
    <string name="alg_pyraminx_5_1"><b>2 edges flipped in place</b>\n\nDo one of these algorithms:\n\nR\' L R L\'\n\nOR\n\nL R\' L\' R\n\nThis will leave you with one of the next cases dependent on which algorithm you used.</string>
    <string name="alg_pyraminx_5_2a"><b>Right-handed one mover</b>\n\nOne edge is oriented correctly but permutated incorrectly, and the two others are wrongly oriented and permutated. You can bring the right edge down to put it in place:\n\nR\' L R L\'</string>
    <string name="alg_pyraminx_5_2b"><b>Left-handed one mover</b>\n\nSame thing as the previous one except that now the left edge can be brought down to its place:\n\nL R\' L\' R</string>
    <string name="alg_pyraminx_5_3"><b>All 3 edges well oriented and wrongly permutated</b>\n\nJust do a right-handed one mover or a left-handed one mover, and then you will have the "2 edges flipped in place" case.</string>
    <string name="puzzle_timer">Puzzle Timer</string>
    <string name="zero_time">00:00:00</string>
    <string name="choose_puzzle_type">Choose puzzle type:</string>
    <string name="start_timer">Start Timer!</string>
    <string name="cancel_timer">Cancel Timer!</string>
    <string name="stop_timer">Stop Timer!</string>
    <string name="statistics">Statistics</string>
    <string name="total_solves">Total\nSolves:</string>
    <string name="favourite_puzzle">Favourite Puzzle:</string>
    <string name="textview">TextView</string>
    <string name="first_solve">First solve:</string>
    <string name="total_solves_default">Total solves: -</string>
    <string name="none_yet">None yet :)</string>
    <string name="dash">-</string>
    <string-array name="spinnerPuzzleType">
        <item>2x2x2</item>
        <item>3x3x3</item>
        <item>4x4x4</item>
        <item>5x5x5</item>
        <item>6x6x6</item>
        <item>7x7x7</item>
        <item>Pyraminx</item>
        <item>Megaminx</item>
        <item>Square-1</item>
        <item>Skewb</item>
        <item>Magic Clock</item>
        <item>Void Cube</item>
        <item>Super Ivy Cube</item>
        <item>Pentacle Cube</item>
        <item>2x2 Pyraminx</item>
        <item>2x2x4</item>
        <item>Master Pyraminx</item>
    </string-array>
</resources>
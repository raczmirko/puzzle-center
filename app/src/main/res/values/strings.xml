<resources>
    <string name="app_name">Puzzle Center</string>
    <string name="n_x_n_x_n_cubes">n x n x n cubes</string>
    <string name="_2x2x2">2x2x2</string>
    <string name="_3x3x3">3x3x3</string>
    <string name="_4x4x4">4x4x4</string>
    <string name="_5x5x5">5x5x5</string>
    <string name="_6x6x6">6x6x6</string>
    <string name="_7x7x7">7x7x7</string>
    <string name="todo">TODO</string>
    <string name="wca_puzzles">WCA Puzzles</string>
    <string name="skewb">Skewb</string>
    <string name="square_1">Square-1</string>
    <string name="pyraminx">Pyraminx</string>
    <string name="megaminx">Megaminx</string>
    <string name="magic_clock">Magic Clock</string>
    <string name="non_wca_puzzles">Non WCA Puzzles</string>
    <string name="void_cube">Void Cube</string>
    <string name="super_ivy_cube">Super Ivy Cube</string>
    <string name="pentacle_cube">Pentacle Cube</string>
    <string name="_2x2_pyraminx">2x2 Pyraminx</string>
    <string name="_2x2x4">2x2x4</string>
    <string name="master_pyraminx">Master Pyraminx</string>
    <string name="friedrich_method">Friedrich method</string>
    <string name="second">2.</string>
    <string name="antisune"><b>AntiSune</b>\n\nR U2 R\' U\' R U\' R\'</string>
    <string name="sune"><b>Sune</b>\n\nL\' U2 L U L\' U L</string>
    <string name="not_tutorial_note">Note: This is by no means a complete tutorial. It\'s rather a collection of useful algorithms I personally use and tips. Hold the cube (yellow side up) the same way as on the top-down views, except if told otherwise.</string>
    <string name="dead_man_2x2"><b>Dead Man</b>\n\nF (R U R\’ U\’)  (R U R\’ U\’) F\’</string>
    <string name="first">1.</string>
    <string name="third">3.</string>
    <string name="_2x2_step_1"><b>First side</b>\n\nSolve any side intuitively in a way that the pieces are well permuted (the sides match too, not only the solved face).</string>
    <string name="_2x2_step_2"><b>Opposite side</b>\n\nSolve the face opposite to the one you just solved. There are 7 cases, use the appropriate algorithm:</string>
    <string name="_2x2_step_3"><b>PLL</b>\n\nLastly we have to permutate last layer. There can be 2 cases, but we can use the same algorithm:</string>
    <string name="_2x2_pll_2">There are two pieces in diagonal that are in place. Hold yellow face towards you, then execute once. This will lead to the previous case, which needs this algorithm executed once more.\n\nR U R D2 R\' U R D2 R2</string>
    <string name="_2x2_pll_1">There are two adjacent pieces in their places, and two pieces need to be swapped. Hold yellow face towards you, then execute once:\n\nR U R D2 R\' U R D2 R2</string>
    <string name="cfop">CFOP (Cross, F2L, OLL, PLL)</string>
    <string name="_3x3_step_1"><b>Cross</b>\n\nSolve any of the crosses (most people do the white cross, but being color-neutral can be faster), that is any of the center pieces matching with the edge pieces in a way that the edge pieces also match with the centers of each side accordingly.\n\nUsually the cross should face the bottom so we avoid unnecessary rotations before the second step.</string>
    <string name="_3x3_step_2"><b>F2L (First Two Layers)</b>\n\nUsing the opposite layer than your cross, form corner-edge pairs and insert them to their places one by one, completing the first two layers at the same time!</string>
    <string name="_3x3_step_3"><b>Last Cross</b>\n\nOnce the first two layers are done we have to solve the last face\'s cross.\n\nThere are 3 possibilites:</string>
    <string name="alg_2x2_h"><b>H-permutation</b>\n\n R2 U2 R U2 R2\n\nThis is a fingertrick, hold bottom left front-back with left hand, bottom right front-back with right hand, twist R2 U2 with right hand, flick R with left hand from back, and reverse back.</string>
    <string name="alg_2x2_l"><b>L-perm / Bowtie</b>\n\n F\’ (R U R\’ U\’) L\’ U L</string>
    <string name="alg_2x2_t"><b>T-permutation</b>\n\n R U R\’ U\’ R\’ F  R\’ F\’</string>
    <string name="alg_2x2_u"><b>U-permutation</b>\n\n F (R U R\’ U\’)  (R U R\’ U\’)</string>
    <string name="alg_3x3_superman"><b>Superman / Headlights</b>\n\nR2 D (R\' U2 R) D\' (R\' U2 R\')</string>
    <string name="alg_3x3_T"><b>T-permutation</b>\n\nL\' U\' L U R U\' L\' U M\'</string>
    <string name="alg_3x3_deadman"><b>Dead man</b>\n\nR U2 (R2 U\' R2 U\') (R2 U2 R)</string>
    <string name="alg_3x3_bowtie"><b>L-perm / Bowtie</b>\n\nF\' (r U R\' U\') (r\' F R)</string>
    <string name="alg_3x3_h"><b>H-perm</b>\n\nF (R U R\' U\') (R U R\' U\') (R U R\' U\') F\'</string>
    <string name="fourth">4.</string>
    <string name="_3x3_step_4"><b>OLL</b>\n\nNext step is to orient the last layer. Just like on the 2x2 there are 7 cases, most of which uses the same algorithm as the 2x2:</string>
    <string name="alg_3x3_dot"><b>Dot</b>\n\nM U (R U R\' U\') M2\' (U R U\' r\') </string>
    <string name="alg_3x3_l"><b>L-shape</b>\n\nF (R U R\' U\') (R U R\' U\') F\'</string>
    <string name="alg_3x3_line"><b>Line</b>\n\nF (R U R\' U\') F\'</string>
    <string name="fifth">5.</string>
    <string name="sixth">6.</string>
    <string name="_3x3_step_6"><b>Permutate last layer edges</b>\n\nThere are 3 possible cases here:</string>
    <string name="alg_3x3_pll4"><b>U-perms</b>\n\nFace the correct edge! Start by doing an M2 and then there are 2 cases. The center that faces you matches the edge piece on the ___ side:\n\n<b>LEFT</b>: U\' M\' U2 M U\' M2\n\n<b>RIGHT</b>: U M\' U2 M U M2</string>
    <string name="alg_3x3_pll3"><b>Z-perm / Diagonal swap</b>\n\nHold the cube so that the F edge needs to be swapped with the L one (and the R with B)!\n\n(M2 U\' M2 U\') M\' (U2 M2 U2) M\'</string>
    <string name="alg_3x3_pll5"><b>H-perm</b>\n\nSwapping F-B and L-R.\n\n(M2 U M2) U2 (M2 U M2)</string>
    <string name="_3x3_step_5"><b>PLL</b>\n\nWe have to permutate the last layer corners. There can be 2 cases, but we can use the same algorithm:</string>
    <string name="reduction_method">Reduction method</string>
    <string name="_4x4_step_0"><b>About the 4x4</b>\n\nEvery cube that has an even number of pieces (squares on a side) is a bit more difficult to solve because of two things:\n\n - <b>Parity</b>\n - <b>No centers</b>\n\nParity means that some pieces are flipped in a way that cannot occur on odd-piece puzzles such as the 3x3. These will need additional algorithms to be fixed.\n\nNo centers mean that there isn\'t a fixed center piece as on the 3x3 for example, so we have no guidance as of which piece goes where. We have to know the colour\'s relative positions to each other to be able to reconstruct the same order of the colour as in solved state.\n\nFollowing the original Rubik\'s cube colours, if you hold the cube with the white face UP, green face TOWARDS you then the orange side will be to the LEFT, and:\n\n - <b>RED opposite ORANGE</b>\n\n - <b>BLUE opposite GREEN</b>\n\n - <b>YELLOW opposite WHITE</b>\n\n If you remember one of the corner pieces then by knowing the opposite colour of each 3 colours of that specific corner piece you can reconstruct the cube.</string>
    <string name="_4x4_step_1"><b>Centers</b>\n\n Firstly we have to create all the 2x2 center pieces.\n\n This step is the same on all big cubes (4x4, 5x5, etc.). We have to create pairs (lines) from the center pieces. Once we have a line, we create another line and join them together to form our centers.\n\nA tactic called "piece hiding" is used to achieve this step, because in order to not ruin the other centers we\'ve already made we need to restore pieces. To do piece hiding, place the two lines on the same layer of the cube, bring one of the lines to the other\'s position, rotate that side 180 degrees so that you can bring the other line back, now next to it\'s pair.\n\nThis step is done intuitively.</string>
    <string name="_4x4_step_2"><b>Edges</b>\n\nSecondly we have to pair up all the edge pieces using the \"slice method\". In short: use the two middle layers to slice the edge pieces next to each other, then put them to the sides to save them. Repeat until there are only 2 edges left!\n\nThen both the edge pieces have to face each other with the same colours facing towards you each layer. Uw stands for Up-wide, so turn both of the upper layers clockwise. </string>
    <string name="_4x4_step_3"><b>Solve like a 3x3!</b>\n\nAt this point the cube can be solved exactly as a 3x3 cube until the OLL step, where parity may occur.</string>
    <string name="_4x4_step_4"><b>OLL/PLL parities</b>\n\n There is only one OLL parity, and one PLL parity on the 4x4. Rw means R-Wide, so turning both right-hand layers by 90 degrees clockwise. 2R2 means the right-handed inner layer of the cube, 180 degrees.</string>
    <string name="zeroth">0.</string>
    <string name="alg_4x4_l2e"><b>Last 2 Edges (L2E)</b>\n\nUw R U R\' F R\' F\' R Uw\'</string>
    <string name="alg_4x4_ollparity"><b>OLL parity</b>\n\nRw U2 (x) Rw U2 Rw U2 Rw\’ U2 Lw U2 Rw\’ U2 Rw U2 Rw\’ U2 Rw\’</string>
    <string name="alg_4x4_pllparity"><b>PLL parity</b>\n\n2R2 U2 2R2 Uw2 2R2 Uw2</string>
    <string name="on">on</string>
    <string name="off">off</string>
    <string name="puzzle_center">Puzzle Center</string>
    <string name="author">by Mirkó Rácz</string>
    <string name="utilities">Utilities</string>
    <string name="solve_timer">Solve timer</string>
    <string name="records">Records</string>
    <string name="puzzle_algorithms_by_category">Puzzle Algorithms By Category</string>
    <string name="only_algorithms_no_tutorial">Only Algorithms, No tutorial!</string>
    <string name="other_wca_puzzles">other WCA puzzles</string>
    <string-array name="spinnerPuzzleType">
        <item>2x2x2</item>
        <item>3x3x3</item>
        <item>4x4x4</item>
        <item>5x5x5</item>
        <item>6x6x6</item>
        <item>7x7x7</item>
        <item>Pyraminx</item>
        <item>Megaminx</item>
        <item>Square-1</item>
        <item>Skewb</item>
        <item>Magic Clock</item>
    </string-array>
</resources>